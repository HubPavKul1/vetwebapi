"""initial

Revision ID: b86acbdfa355
Revises: 
Create Date: 2024-05-05 15:02:20.908811

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "b86acbdfa355"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "accounting_units",
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "administration_methods",
        sa.Column("name", sa.String(length=50), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "biomaterial_fixations",
        sa.Column("name", sa.String(length=300), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "biomaterial_packages",
        sa.Column("name", sa.String(length=300), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "biomaterials",
        sa.Column("name", sa.String(length=300), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "budgets",
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "companies",
        sa.Column("full_name", sa.String(), nullable=False),
        sa.Column("short_name", sa.String(), nullable=False),
        sa.Column("is_vet", sa.Boolean(), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "diagnostic_methods",
        sa.Column("name", sa.String(length=30), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "diseases",
        sa.Column("name", sa.String(length=300), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "disposal_methods",
        sa.Column("name", sa.Text(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "dosages",
        sa.Column("name", sa.Text(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "drug_manufacturers",
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "operations",
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "places_of_administration",
        sa.Column("name", sa.Text(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "positions",
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "regions",
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "roles",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "types_of_feeding",
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "usage_types",
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "work_types",
        sa.Column("name", sa.String(length=30), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "animal_groups",
        sa.Column("type_of_feeding_id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["type_of_feeding_id"], ["types_of_feeding.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "districts",
        sa.Column("region_id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["region_id"], ["regions.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "drug_movements",
        sa.Column("operation_id", sa.Integer(), nullable=False),
        sa.Column("operation_date", sa.Date(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["operation_id"], ["operations.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "drugs",
        sa.Column("disease_id", sa.Integer(), nullable=False),
        sa.Column("drug_manufacturer_id", sa.Integer(), nullable=False),
        sa.Column("budget_id", sa.Integer(), nullable=False),
        sa.Column("accounting_unit_id", sa.Integer(), nullable=False),
        sa.Column("disposal_method_id", sa.Integer(), nullable=False),
        sa.Column("dosage_id", sa.Integer(), nullable=False),
        sa.Column("place_of_administration_id", sa.Integer(), nullable=False),
        sa.Column("administration_method_id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=300), nullable=False),
        sa.Column("packing", sa.Float(), nullable=False),
        sa.Column("instruction", sa.String(), nullable=True),
        sa.Column("image", sa.String(), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["accounting_unit_id"], ["accounting_units.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["administration_method_id"],
            ["administration_methods.id"],
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["budget_id"], ["budgets.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["disease_id"], ["diseases.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["disposal_method_id"], ["disposal_methods.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["dosage_id"], ["dosages.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["drug_manufacturer_id"],
            ["drug_manufacturers.id"],
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["place_of_administration_id"],
            ["places_of_administration.id"],
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "employees",
        sa.Column("company_id", sa.Integer(), nullable=False),
        sa.Column("position_id", sa.Integer(), nullable=False),
        sa.Column("lastname", sa.String(length=50), nullable=False),
        sa.Column("firstname", sa.String(length=30), nullable=False),
        sa.Column("patronymic", sa.String(length=100), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["company_id"], ["companies.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["position_id"], ["positions.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "users",
        sa.Column("role_id", sa.Integer(), nullable=False),
        sa.Column("username", sa.String(length=10), nullable=False),
        sa.Column("email", sa.String(length=320), nullable=True),
        sa.Column("hashed_password", sa.String(length=1024), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("is_superuser", sa.Boolean(), nullable=False),
        sa.Column("is_verified", sa.Boolean(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["role_id"], ["roles.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("hashed_password"),
        sa.UniqueConstraint("username"),
    )
    op.create_index(op.f("ix_users_email"), "users", ["email"], unique=True)
    op.create_table(
        "vetworks",
        sa.Column("work_type_id", sa.Integer(), nullable=False),
        sa.Column("vetwork_date", sa.Date(), nullable=False),
        sa.Column("is_state_assignment", sa.Boolean(), nullable=False),
        sa.Column("is_primary", sa.Boolean(), nullable=False),
        sa.Column("clinic_id", sa.Integer(), nullable=False),
        sa.Column("biomaterial_id", sa.Integer(), nullable=True),
        sa.Column("biomaterial_package_id", sa.Integer(), nullable=True),
        sa.Column("biomaterial_fixation_id", sa.Integer(), nullable=True),
        sa.Column("diagnostic_method_id", sa.Integer(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["biomaterial_fixation_id"],
            ["biomaterial_fixations.id"],
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["biomaterial_id"], ["biomaterials.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["biomaterial_package_id"],
            ["biomaterial_packages.id"],
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["clinic_id"], ["companies.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["diagnostic_method_id"],
            ["diagnostic_methods.id"],
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["work_type_id"], ["work_types.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "catalog_drugs",
        sa.Column("drug_id", sa.Integer(), nullable=False),
        sa.Column("batch", sa.String(length=10), nullable=False),
        sa.Column("control", sa.String(length=10), nullable=False),
        sa.Column("production_date", sa.Date(), nullable=False),
        sa.Column("expiration_date", sa.Date(), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["drug_id"], ["drugs.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "cities",
        sa.Column("district_id", sa.Integer(), nullable=True),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["district_id"], ["districts.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "doctors_in_vetwork",
        sa.Column("vetwork_id", sa.Integer(), nullable=False),
        sa.Column("employee_id", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["employee_id"], ["employees.id"]),
        sa.ForeignKeyConstraint(["vetwork_id"], ["vetworks.id"]),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "vetwork_id", "employee_id", name="idx_unique_doctor_in_vetwork"
        ),
    )
    op.create_table(
        "species",
        sa.Column("animal_group_id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["animal_group_id"], ["animal_groups.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "drugs_in_movement",
        sa.Column("drug_movement_id", sa.Integer(), nullable=False),
        sa.Column("catalog_drug_id", sa.Integer(), nullable=False),
        sa.Column("packs_amount", sa.Integer(), nullable=False),
        sa.Column("units_amount", sa.Float(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["catalog_drug_id"], ["catalog_drugs.id"]),
        sa.ForeignKeyConstraint(["drug_movement_id"], ["drug_movements.id"]),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "drug_movement_id",
            "catalog_drug_id",
            name="idx_unique_drug_in_movement",
        ),
    )
    op.create_table(
        "genders",
        sa.Column("species_id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["species_id"], ["species.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "streets",
        sa.Column("city_id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=250), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["city_id"], ["cities.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "addresses",
        sa.Column("company_id", sa.Integer(), nullable=False),
        sa.Column("street_id", sa.Integer(), nullable=False),
        sa.Column("house_number", sa.String(length=5), nullable=False),
        sa.Column("phone_number1", sa.String(), nullable=False),
        sa.Column("phone_number2", sa.String(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["company_id"], ["companies.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["street_id"], ["streets.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "animals",
        sa.Column("species_id", sa.Integer(), nullable=False),
        sa.Column("company_id", sa.Integer(), nullable=False),
        sa.Column("usage_type_id", sa.Integer(), nullable=False),
        sa.Column("gender_id", sa.Integer(), nullable=False),
        sa.Column("date_of_birth", sa.Date(), nullable=False),
        sa.Column("nickname", sa.String(length=100), nullable=False),
        sa.Column("identification", sa.String(length=15), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["company_id"], ["companies.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["gender_id"], ["genders.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["species_id"], ["species.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["usage_type_id"], ["usage_types.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "animals_in_vetwork",
        sa.Column("vetwork_id", sa.Integer(), nullable=False),
        sa.Column("animal_id", sa.Integer(), nullable=False),
        sa.Column("dosage", sa.Float(), nullable=True),
        sa.Column("is_positive", sa.Boolean(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["animal_id"], ["animals.id"]),
        sa.ForeignKeyConstraint(["vetwork_id"], ["vetworks.id"]),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "vetwork_id", "animal_id", name="idx_unique_animal_in_vetwork"
        ),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("animals_in_vetwork")
    op.drop_table("animals")
    op.drop_table("addresses")
    op.drop_table("streets")
    op.drop_table("genders")
    op.drop_table("drugs_in_movement")
    op.drop_table("species")
    op.drop_table("doctors_in_vetwork")
    op.drop_table("cities")
    op.drop_table("catalog_drugs")
    op.drop_table("vetworks")
    op.drop_index(op.f("ix_users_email"), table_name="users")
    op.drop_table("users")
    op.drop_table("employees")
    op.drop_table("drugs")
    op.drop_table("drug_movements")
    op.drop_table("districts")
    op.drop_table("animal_groups")
    op.drop_table("work_types")
    op.drop_table("usage_types")
    op.drop_table("types_of_feeding")
    op.drop_table("roles")
    op.drop_table("regions")
    op.drop_table("positions")
    op.drop_table("places_of_administration")
    op.drop_table("operations")
    op.drop_table("drug_manufacturers")
    op.drop_table("dosages")
    op.drop_table("disposal_methods")
    op.drop_table("diseases")
    op.drop_table("diagnostic_methods")
    op.drop_table("companies")
    op.drop_table("budgets")
    op.drop_table("biomaterials")
    op.drop_table("biomaterial_packages")
    op.drop_table("biomaterial_fixations")
    op.drop_table("administration_methods")
    op.drop_table("accounting_units")
    # ### end Alembic commands ###
