services:
  app:
    container_name: "vetwebapi"
    build: ./vetwebapi/
    stop_signal: SIGKILL
    env_file:
      - ./vetwebapi/.env
    ports:
      - "8000:8000"
    volumes:
      - "./vetwebapi/logs:/vetwebapi/logs:rw"
      - "./vetwebapi/media:/vetwebapi/media:rw"
    depends_on:
      - db
    networks:
      - network

  frontend:
    container_name: "vetwebfront"
    build: ./vetwebfrontts/
    stop_signal: SIGKILL
    ports:
      - "3000:5173"
    depends_on:
      - db
    networks:
      - network

  nginx:
    container_name: "nginx"
    restart: always
    build: ./vetwebfrontts/
    ports:
      - "80:80"
    volumes:
      - "./nginx.conf:/etc/nginx/nginx.conf"
    networks:
      - network
    depends_on:
      - app
      - frontend

  db:
    image: postgres:15.3-alpine3.18
    container_name: "db"
    restart: always
    env_file:
      - ./vetwebapi/.env
    ports:
      - "5432:5432"
    command: postgres -c log_destination=stderr -c logging_collector=on -c log_directory='logs'
    volumes:
      - ./db/:/var/lib/postgresql/data
    networks:
      - network

networks:
  network:
    driver: bridge
